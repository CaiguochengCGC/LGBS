USE [WebReport_DB]
GO
/****** Object:  StoredProcedure [dbo].[USP_GET_PMC_PRODUCT_DAY]    Script Date: 08/24/2015 09:48:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

---按照每天早上统计一次数据
-----产量日报表存储过程  
ALTER  PROCEDURE  [dbo].[USP_GET_PMC_PRODUCT_DAY] 
  @ERROR_TAG   CHAR(1)        OUTPUT,      --错误标志：0.成功,1.错误
  @ERROR_MSG   NVARCHAR(4000) OUTPUT       --错误信息
As 
Begin
DECLARE @TYPE	VARCHAR(50);--EVENTDATA8标识
DECLARE @EVENTNUM			int;--判断是否存在记录
DECLARE @WORKDATE			VARCHAR(10);--工作时间
DECLARE	@EVENTDATE1			varchar(1024);--工段
DECLARE	@EVENTDATE30		varchar(1024);--工段名称
DECLARE @EVENTDATE31		varchar(1024);--线体分类
DECLARE	@EVENTDATE29		varchar(1024);---实际产量
DECLARE	@EVENTDATE27		varchar(1024);--下线量
DECLARE	@EVENTDATE28		varchar(1024);--上线量
DECLARE	@SEQ				int;--排序原则
DECLARE	@EVENTDATE3			varchar(1024);--8:00~9:00
DECLARE	@EVENTDATE4			varchar(1024);--9:00~10:00
DECLARE	@EVENTDATE5			varchar(1024);--10:00-11:00
DECLARE	@EVENTDATE6			varchar(1024);--11:00-12:00
DECLARE	@EVENTDATE7			varchar(1024);--12:00-13:00
DECLARE	@EVENTDATE8			varchar(1024);--13:00-14:00
DECLARE	@EVENTDATE9			varchar(1024);--14:00-15:00
DECLARE	@EVENTDATE10		varchar(1024);--15:00-16:00
DECLARE	@EVENTDATE11		varchar(1024);--16:00-17:00
DECLARE	@EVENTDATE12		varchar(1024);--17:00-18:00
DECLARE	@EVENTDATE13		varchar(1024);--18:00-19:00
DECLARE	@EVENTDATE14		varchar(1024);--19:00-20:00
DECLARE	@EVENTDATE15		varchar(1024);--20:00-21:00
DECLARE	@EVENTDATE16		varchar(1024);--21:00-22:00
DECLARE	@EVENTDATE17		varchar(1024);--22:00-23:00
DECLARE	@EVENTDATE18		varchar(1024);--23:00-00:00
DECLARE	@EVENTDATE19		varchar(1024);--00:00-01:00
DECLARE	@EVENTDATE20		varchar(1024);--01:00-02:00
DECLARE	@EVENTDATE21		varchar(1024);--02:00-03:00
DECLARE	@EVENTDATE22		varchar(1024);--03:00-04:00
DECLARE	@EVENTDATE23		varchar(1024);--04:00-05:00
DECLARE	@EVENTDATE24		varchar(1024);--05:00-06:00
DECLARE	@EVENTDATE25		varchar(1024);--06:00-07:00
DECLARE	@EVENTDATE26		varchar(1024);--07:00-08:00

DECLARE @IP21	INT;
DECLARE @IP22	INT;
DECLARE @IP23	INT;
DECLARE @ZP11	INT;
DECLARE @BP31	INT;
DECLARE @IP24	INT;
DECLARE @BP32	INT;
DECLARE @AS21	INT;
DECLARE @OTHER	INT;

DECLARE @PLANPRODUCT INT;--计划产量

--2015-07-17
BEGIN TRY
BEGIN TRANSACTION
	--获取当前时间所在的工作时间
	SELECT @WORKDATE = CONVERT(VARCHAR(10),WORKDATE,20) FROM PMC_DATE_IMPORT WHERE STARTTIME <= getdate()-1 AND ENDTIME > GETDATE()-1;
	
	--获取当天的计划产量
	SELECT @IP21 = SUM(IP21),@IP22 = SUM(IP22),@IP23 = SUM(IP23),@ZP11 = SUM(ZP11),
	@BP31 = SUM(BP31),@IP24 = SUM(IP24),@BP32 = SUM(BP32),@AS21 = SUM(AS21),@OTHER = SUM(OTHER) 
	FROM PMC_DATE_IMPORT WHERE CONVERT(VARCHAR(10),WORKDATE,20) = CONVERT(VARCHAR(10),GETDATE()-1,20)
	
	DECLARE  cur_data  cursor  for
	
	Select  distinct PRODUCTIONLINE,PRODUCTIONLINENAME,PSEQ 
	from PMC_PP_STATION_PRODUCT
	order by PSEQ
	
	
	open  cur_data
	fetch  next  from  cur_data  into  @EVENTDATE1,@EVENTDATE30,@SEQ
	while(@@fetch_status  =  0) 
	begin 
		
		--传入工段中英文名称区分数据
		if(@SEQ = 23 or @SEQ = 23 or @SEQ = 9 or @SEQ = 10 or @SEQ = 12 or @SEQ = 13)
		begin
			--计算工段，工段名称、产量、上线、下线
			SELECT @EVENTDATE29 = ISNULL(A.PRODUCT,0),
			@EVENTDATE27 = ISNULL(B.UPPRDUCT,0),
			@EVENTDATE28 = ISNULL(C.DOWNPRODUCT,0)
			FROM (SELECT EVENTDATA5,EVENTDATA6,COUNT(EVENTDATA4) AS PRODUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 0 AND EventData5 = @EVENTDATE1 AND EventData6 = @EVENTDATE30 
			GROUP BY EVENTDATA5,EVENTDATA6,EVENTDATA11) AS A 
			LEFT JOIN (SELECT EVENTDATA5,COUNT(EVENTDATA4) AS UPPRDUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 1 AND EventData5 = @EVENTDATE1 AND EventData6 = @EVENTDATE30
			GROUP BY EVENTDATA5) AS B
			ON A.EVENTDATA5 = B.EVENTDATA5
			LEFT JOIN (SELECT EVENTDATA5,COUNT(EVENTDATA4) AS DOWNPRODUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 2 AND EventData5 = @EVENTDATE1 AND EventData6 = @EVENTDATE30
			GROUP BY EVENTDATA5) AS C
			ON A.EVENTDATA5 = C.EVENTDATA5
			
			--判断是否存在该记录
			SELECT @EVENTNUM = COUNT(*) FROM tabProductHour 
				WHERE EVENTDATA = @WORKDATE+' 08:00:07'
				AND EVENTDATE1 = @EVENTDATE1
				AND EVENTDATE30 = @EVENTDATE30;
			IF @EVENTNUM <= 0
			BEGIN
				INSERT INTO tabProductHour(EVENTDATA,EVENTDATE1,EVENTDATE30,EVENTDATE29,EVENTDATE27,EVENTDATE28,Seq)
				VALUES(@WORKDATE+' 08:00:07',@EVENTDATE1,@EVENTDATE30,@EVENTDATE29,@EVENTDATE27,@EVENTDATE28,@Seq);
			END
			ELSE
			BEGIN
				UPDATE tabProductHour SET EVENTDATE30 = @EVENTDATE30,EVENTDATE29 = @EVENTDATE29,EVENTDATE27 = @EVENTDATE27,EVENTDATE28 = @EVENTDATE28,Seq = @Seq
				WHERE EVENTDATA = @WORKDATE+' 08:00:07' AND EVENTDATE1 = @EVENTDATE1 AND EVENTDATE30 = @EVENTDATE30;
			END
		
			--08:00~09:00
			SET @EVENTDATE3 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 08:00:00',@WORKDATE+' 09:00:00',@EVENTDATE1,@EVENTDATE30)
			--09:00~10:00
			SET @EVENTDATE4 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 09:00:00',@WORKDATE+' 10:00:00',@EVENTDATE1,@EVENTDATE30)
			--10:00~11:00
			SET @EVENTDATE5 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 10:00:00',@WORKDATE+' 11:00:00',@EVENTDATE1,@EVENTDATE30)
			--11:00~12:00
			SET @EVENTDATE6 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 11:00:00',@WORKDATE+' 12:00:00',@EVENTDATE1,@EVENTDATE30)
			--12:00~13:00
			set @EVENTDATE7 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 12:00:00', @WORKDATE+' 13:00:00',@EVENTDATE1,@EVENTDATE30)
			--13:00~14:00
			set @EVENTDATE8 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 13:00:00', @WORKDATE+' 14:00:00',@EVENTDATE1,@EVENTDATE30)
			--14:00~15:00
			set @EVENTDATE9 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 14:00:00', @WORKDATE+' 15:00:00',@EVENTDATE1,@EVENTDATE30)
			--15:00~16:00
			set @EVENTDATE10 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 15:00:00', @WORKDATE+' 16:00:00',@EVENTDATE1,@EVENTDATE30)
			--16:00~17:00
			set @EVENTDATE11 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 16:00:00', @WORKDATE+' 17:00:00',@EVENTDATE1,@EVENTDATE30)
			--17:00~18:00
			set @EVENTDATE12 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 17:00:00', @WORKDATE+' 18:00:00',@EVENTDATE1,@EVENTDATE30)
			--18:00~19:00
			set @EVENTDATE13 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 18:00:00', @WORKDATE+' 19:00:00',@EVENTDATE1,@EVENTDATE30)
			--19:00~20:00
			set @EVENTDATE14 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 19:00:00', @WORKDATE+' 20:00:00',@EVENTDATE1,@EVENTDATE30)
			--20:00~21:00
			set @EVENTDATE15 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 20:00:00', @WORKDATE+' 21:00:00',@EVENTDATE1,@EVENTDATE30)
			--21:00~22:00
			set @EVENTDATE16 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 21:00:00', @WORKDATE+' 22:00:00',@EVENTDATE1,@EVENTDATE30)
			--22:00~23:00
			set @EVENTDATE17 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 22:00:00', @WORKDATE+' 23:00:00',@EVENTDATE1,@EVENTDATE30)
			--23:00~00:00
			set @EVENTDATE18 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 23:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 00:00:00',@EVENTDATE1,@EVENTDATE30)
			--00:00~01:00
			set @EVENTDATE19 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 00:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 01:00:00',@EVENTDATE1,@EVENTDATE30)
			--01:00~02:00
			set @EVENTDATE20 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 01:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 02:00:00',@EVENTDATE1,@EVENTDATE30)
			--02:00~03:00
			set @EVENTDATE21 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 02:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 03:00:00',@EVENTDATE1,@EVENTDATE30)
			--03:00~04:00
			set @EVENTDATE22 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 03:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 04:00:00',@EVENTDATE1,@EVENTDATE30)
			--04:00~05:00
			set @EVENTDATE23 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 04:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 05:00:00',@EVENTDATE1,@EVENTDATE30)
			--05:00~06:00
			set @EVENTDATE24 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 05:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 06:00:00',@EVENTDATE1,@EVENTDATE30)
			--06:00~07:00
			set @EVENTDATE25 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 06:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 07:00:00',@EVENTDATE1,@EVENTDATE30)
			--07:00~08:00
			SET @EVENTDATE26 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 07:00:00',CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 08:00:00',@EVENTDATE1,@EVENTDATE30)
			
		end
		--传入工段英文名称 和 EVENTDATA8的数据区分各个工段数据
		Else if(@SEQ = 16 or @SEQ = 17 or @SEQ = 21 or @SEQ = 22 or @SEQ = 25 or @SEQ = 26)
		begin
			if @SEQ = 16
				set @TYPE = '左侧围'
			else if @SEQ = 17
				set @TYPE = '右侧围'
			else if @SEQ = 21 or @SEQ = 25
				set @TYPE = '前盖'
			else
				set @TYPE = '尾门'
			--计算工段，工段名称、产量、上线、下线
			SELECT @EVENTDATE29 = ISNULL(A.PRODUCT,0),
			@EVENTDATE27 = ISNULL(B.UPPRDUCT,0),
			@EVENTDATE28 = ISNULL(C.DOWNPRODUCT,0)
			FROM (SELECT EVENTDATA5,EVENTDATA6,COUNT(EVENTDATA4) AS PRODUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 0 AND EventData5 = @EVENTDATE1 AND EventData8 = @TYPE
			GROUP BY EVENTDATA5,EVENTDATA6,EVENTDATA11) AS A 
			LEFT JOIN (SELECT EVENTDATA5,COUNT(EVENTDATA4) AS UPPRDUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 1 AND EventData5 = @EVENTDATE1 AND EventData8 = @TYPE
			GROUP BY EVENTDATA5) AS B
			ON A.EVENTDATA5 = B.EVENTDATA5
			LEFT JOIN (SELECT EVENTDATA5,COUNT(EVENTDATA4) AS DOWNPRODUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 2 AND EventData5 = @EVENTDATE1 AND EventData8 = @TYPE
			GROUP BY EVENTDATA5) AS C
			ON A.EVENTDATA5 = C.EVENTDATA5
			
			--判断是否存在该记录
			SELECT @EVENTNUM = COUNT(*) FROM tabProductHour 
				WHERE EVENTDATA = @WORKDATE+' 08:00:07'
				AND EVENTDATE1 = @EVENTDATE1
				AND EVENTDATE30 = @EVENTDATE30;
			IF @EVENTNUM <= 0
			BEGIN
				INSERT INTO tabProductHour(EVENTDATA,EVENTDATE1,EVENTDATE30,EVENTDATE29,EVENTDATE27,EVENTDATE28,Seq)
				VALUES(@WORKDATE+' 08:00:07',@EVENTDATE1,@EVENTDATE30,@EVENTDATE29,@EVENTDATE27,@EVENTDATE28,@Seq);
			END
			ELSE
			BEGIN
				UPDATE tabProductHour SET EVENTDATE30 = @EVENTDATE30,EVENTDATE29 = @EVENTDATE29,EVENTDATE27 = @EVENTDATE27,EVENTDATE28 = @EVENTDATE28,Seq = @Seq
				WHERE EVENTDATA = @WORKDATE+' 08:00:07' AND EVENTDATE1 = @EVENTDATE1 AND EVENTDATE30 = @EVENTDATE30;
			END
			
			--08:00~09:00
			SET @EVENTDATE3 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 08:00:00',@WORKDATE+' 09:00:00',@EVENTDATE1,'',@TYPE)
			--09:00~10:00
			SET @EVENTDATE4 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 09:00:00',@WORKDATE+' 10:00:00',@EVENTDATE1,'',@TYPE)
			--10:00~11:00
			SET @EVENTDATE5 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 10:00:00',@WORKDATE+' 11:00:00',@EVENTDATE1,'',@TYPE)
			--11:00~12:00
			SET @EVENTDATE6 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 11:00:00',@WORKDATE+' 12:00:00',@EVENTDATE1,'',@TYPE)
			--12:00~13:00
			set @EVENTDATE7 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 12:00:00', @WORKDATE+' 13:00:00',@EVENTDATE1,'',@TYPE)
			--13:00~14:00
			set @EVENTDATE8 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 13:00:00', @WORKDATE+' 14:00:00',@EVENTDATE1,'',@TYPE)
			--14:00~15:00
			set @EVENTDATE9 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 14:00:00', @WORKDATE+' 15:00:00',@EVENTDATE1,'',@TYPE)
			--15:00~16:00
			set @EVENTDATE10 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 15:00:00', @WORKDATE+' 16:00:00',@EVENTDATE1,'',@TYPE)
			--16:00~17:00
			set @EVENTDATE11 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 16:00:00', @WORKDATE+' 17:00:00',@EVENTDATE1,'',@TYPE)
			--17:00~18:00
			set @EVENTDATE12 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 17:00:00', @WORKDATE+' 18:00:00',@EVENTDATE1,'',@TYPE)
			--18:00~19:00
			set @EVENTDATE13 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 18:00:00', @WORKDATE+' 19:00:00',@EVENTDATE1,'',@TYPE)
			--19:00~20:00
			set @EVENTDATE14 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 19:00:00', @WORKDATE+' 20:00:00',@EVENTDATE1,'',@TYPE)
			--20:00~21:00
			set @EVENTDATE15 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 20:00:00', @WORKDATE+' 21:00:00',@EVENTDATE1,'',@TYPE)
			--21:00~22:00
			set @EVENTDATE16 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 21:00:00', @WORKDATE+' 22:00:00',@EVENTDATE1,'',@TYPE)
			--22:00~23:00
			set @EVENTDATE17 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 22:00:00', @WORKDATE+' 23:00:00',@EVENTDATE1,'',@TYPE)
			--23:00~00:00
			set @EVENTDATE18 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,@WORKDATE+' 23:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 00:00:00',@EVENTDATE1,'',@TYPE)
			--00:00~01:00
			set @EVENTDATE19 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 00:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 01:00:00',@EVENTDATE1,'',@TYPE)
			--01:00~02:00
			set @EVENTDATE20 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 01:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 02:00:00',@EVENTDATE1,'',@TYPE)
			--02:00~03:00
			set @EVENTDATE21 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 02:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 03:00:00',@EVENTDATE1,'',@TYPE)
			--03:00~04:00
			set @EVENTDATE22 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 03:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 04:00:00',@EVENTDATE1,'',@TYPE)
			--04:00~05:00
			set @EVENTDATE23 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 04:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 05:00:00',@EVENTDATE1,'',@TYPE)
			--05:00~06:00
			set @EVENTDATE24 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 05:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 06:00:00',@EVENTDATE1,'',@TYPE)
			--06:00~07:00
			set @EVENTDATE25 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 06:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 07:00:00',@EVENTDATE1,'',@TYPE)
			--07:00~08:00
			SET @EVENTDATE26 = dbo.USF_GET_PLANCOUNT_DATA_OTHER(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 07:00:00',CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 08:00:00',@EVENTDATE1,'',@TYPE)
			
		end
		Else
		begin
			--计算工段，工段名称、产量、上线、下线
			SELECT @EVENTDATE29 = ISNULL(A.PRODUCT,0),
			@EVENTDATE27 = ISNULL(B.UPPRDUCT,0),
			@EVENTDATE28 = ISNULL(C.DOWNPRODUCT,0)
			FROM (SELECT EVENTDATA5,EVENTDATA6,COUNT(EVENTDATA4) AS PRODUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 0 AND EventData5 = @EVENTDATE1
			GROUP BY EVENTDATA5,EVENTDATA6,EVENTDATA11) AS A 
			LEFT JOIN (SELECT EVENTDATA5,COUNT(EVENTDATA4) AS UPPRDUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 1 AND EventData5 = @EVENTDATE1
			GROUP BY EVENTDATA5) AS B
			ON A.EVENTDATA5 = B.EVENTDATA5
			LEFT JOIN (SELECT EVENTDATA5,COUNT(EVENTDATA4) AS DOWNPRODUCT FROM tabProduct
			WHERE 1=1 AND convert(varchar(10),EventDate,20) = @WORKDATE
			AND EVENTDATA4 = 2 AND EventData5 = @EVENTDATE1
			GROUP BY EVENTDATA5) AS C
			ON A.EVENTDATA5 = C.EVENTDATA5
			
			--判断是否存在该记录
			SELECT @EVENTNUM = COUNT(*) FROM tabProductHour 
				WHERE EVENTDATA = @WORKDATE+' 08:00:07'
				AND EVENTDATE1 = @EVENTDATE1
				AND EVENTDATE30 = @EVENTDATE30;
			IF @EVENTNUM <= 0
			BEGIN
				INSERT INTO tabProductHour(EVENTDATA,EVENTDATE1,EVENTDATE30,EVENTDATE29,EVENTDATE27,EVENTDATE28,Seq)
				VALUES(@WORKDATE+' 08:00:07',@EVENTDATE1,@EVENTDATE30,@EVENTDATE29,@EVENTDATE27,@EVENTDATE28,@Seq);
			END
			ELSE
			BEGIN
				UPDATE tabProductHour SET EVENTDATE30 = @EVENTDATE30,EVENTDATE29 = @EVENTDATE29,EVENTDATE27 = @EVENTDATE27,EVENTDATE28 = @EVENTDATE28,Seq = @Seq
				WHERE EVENTDATA = @WORKDATE+' 08:00:07' AND EVENTDATE1 = @EVENTDATE1 AND EVENTDATE30 = @EVENTDATE30;
			END
			
			--08:00~09:00
			SET @EVENTDATE3 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 08:00:00',@WORKDATE+' 09:00:00',@EVENTDATE1,'')
			--09:00~10:00
			SET @EVENTDATE4 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 09:00:00',@WORKDATE+' 10:00:00',@EVENTDATE1,'')
			--10:00~11:00
			SET @EVENTDATE5 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 10:00:00',@WORKDATE+' 11:00:00',@EVENTDATE1,'')
			--11:00~12:00
			SET @EVENTDATE6 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 11:00:00',@WORKDATE+' 12:00:00',@EVENTDATE1,'')
			--12:00~13:00
			set @EVENTDATE7 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 12:00:00', @WORKDATE+' 13:00:00',@EVENTDATE1,'')
			--13:00~14:00
			set @EVENTDATE8 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 13:00:00', @WORKDATE+' 14:00:00',@EVENTDATE1,'')
			--14:00~15:00
			set @EVENTDATE9 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 14:00:00', @WORKDATE+' 15:00:00',@EVENTDATE1,'')
			--15:00~16:00
			set @EVENTDATE10 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 15:00:00', @WORKDATE+' 16:00:00',@EVENTDATE1,'')
			--16:00~17:00
			set @EVENTDATE11 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 16:00:00', @WORKDATE+' 17:00:00',@EVENTDATE1,'')
			--17:00~18:00
			set @EVENTDATE12 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 17:00:00', @WORKDATE+' 18:00:00',@EVENTDATE1,'')
			--18:00~19:00
			set @EVENTDATE13 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 18:00:00', @WORKDATE+' 19:00:00',@EVENTDATE1,'')
			--19:00~20:00
			set @EVENTDATE14 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 19:00:00', @WORKDATE+' 20:00:00',@EVENTDATE1,'')
			--20:00~21:00
			set @EVENTDATE15 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 20:00:00', @WORKDATE+' 21:00:00',@EVENTDATE1,'')
			--21:00~22:00
			set @EVENTDATE16 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 21:00:00', @WORKDATE+' 22:00:00',@EVENTDATE1,'')
			--22:00~23:00
			set @EVENTDATE17 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 22:00:00', @WORKDATE+' 23:00:00',@EVENTDATE1,'')
			--23:00~00:00
			set @EVENTDATE18 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,@WORKDATE+' 23:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 00:00:00',@EVENTDATE1,'')
			--00:00~01:00
			set @EVENTDATE19 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 00:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 01:00:00',@EVENTDATE1,'')
			--01:00~02:00
			set @EVENTDATE20 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 01:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 02:00:00',@EVENTDATE1,'')
			--02:00~03:00
			set @EVENTDATE21 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 02:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 03:00:00',@EVENTDATE1,'')
			--03:00~04:00
			set @EVENTDATE22 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 03:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 04:00:00',@EVENTDATE1,'')
			--04:00~05:00
			set @EVENTDATE23 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 04:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 05:00:00',@EVENTDATE1,'')
			--05:00~06:00
			set @EVENTDATE24 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 05:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 06:00:00',@EVENTDATE1,'')
			--06:00~07:00
			set @EVENTDATE25 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 06:00:00', CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 07:00:00',@EVENTDATE1,'')
			--07:00~08:00
			SET @EVENTDATE26 = dbo.USF_GET_PLANCOUNT_DATA(@WORKDATE,CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 07:00:00',CONVERT(varchar(10), CONVERT(DATETIME,@WORKDATE,20)+1, 23)+' 08:00:00',@EVENTDATE1,'')
			
		end
		set @PLANPRODUCT = 0
		if @SEQ = 1 or @SEQ = 2
			set @PLANPRODUCT = @IP21 + @IP22 + @IP23 + @ZP11 + @BP31 + @IP24 + @BP32 + @AS21 + @OTHER
		else if @SEQ = 3
			set @PLANPRODUCT = @IP21 + @IP22 + @IP23 + @ZP11 + @BP31 + @IP24 + @BP32
		else if @SEQ = 4
			set @PLANPRODUCT = @BP31 + @BP32
		else if @SEQ = 5
			set @PLANPRODUCT = @IP21 + @IP22 + @IP23 + @IP24 + @AS21
		else if @SEQ = 6
			set @PLANPRODUCT = @ZP11 + @BP31 + @BP32
		else if @SEQ = 7 or @SEQ = 8
			set @PLANPRODUCT = @AS21
		else if @SEQ = 9 or @SEQ = 10 or @SEQ = 11 or @SEQ = 16 or @SEQ = 17 or @SEQ = 21 or @SEQ = 22
			set @PLANPRODUCT = @ZP11
		else if @SEQ = 12 or @SEQ = 13
			set @PLANPRODUCT = @BP31 + @BP32
		else if @SEQ = 14 or @SEQ = 15
			set @PLANPRODUCT = @IP21 + @BP31 + @BP32 + @AS21
		else if @SEQ = 18 
			set @PLANPRODUCT = @IP21 + @IP22 + @IP23
		else if @SEQ = 19 or @SEQ = 20
			set @PLANPRODUCT = @ZP11*2
		else if @SEQ = 23 or @SEQ = 24
			set @PLANPRODUCT = (@IP21 + @IP22 + @IP23)*2
		else if @SEQ = 25 or @SEQ = 26
			set @PLANPRODUCT = @BP31 + @BP32 + @AS21
		else if @SEQ = 27 or @SEQ = 28
			set @PLANPRODUCT = (@BP31 + @BP32 + @AS21)*2
		else
			set @PLANPRODUCT = 0
		--更新数据
		UPDATE tabProductHour SET EVENTDATE3 = ISNULL(@EVENTDATE3,0),EVENTDATE4 = ISNULL(@EVENTDATE4,0),EVENTDATE5 = ISNULL(@EVENTDATE5,0),
		EVENTDATE6 = ISNULL(@EVENTDATE6,0),EVENTDATE7 = ISNULL(@EVENTDATE7,0),EVENTDATE8 = ISNULL(@EVENTDATE8,0),EVENTDATE9 = ISNULL(@EVENTDATE9,0),
		EVENTDATE10 = ISNULL(@EVENTDATE10,0),EVENTDATE11 = ISNULL(@EVENTDATE11,0),EVENTDATE12 = ISNULL(@EVENTDATE12,0),EVENTDATE13 = ISNULL(@EVENTDATE13,0),
		EVENTDATE14 = ISNULL(@EVENTDATE14,0),EVENTDATE15 = ISNULL(@EVENTDATE15,0),EVENTDATE16 = ISNULL(@EVENTDATE16,0),EVENTDATE17 = ISNULL(@EVENTDATE17,0),
		EVENTDATE18 = ISNULL(@EVENTDATE18,0),EVENTDATE19 = ISNULL(@EVENTDATE19,0),EVENTDATE20 = ISNULL(@EVENTDATE20,0),EVENTDATE21 = ISNULL(@EVENTDATE21,0),
		EVENTDATE22 = ISNULL(@EVENTDATE22,0),EVENTDATE23 = ISNULL(@EVENTDATE23,0),EVENTDATE24 = ISNULL(@EVENTDATE24,0),EVENTDATE25 = ISNULL(@EVENTDATE25,0),
		EVENTDATE26 = ISNULL(@EVENTDATE26,0),EventDate31 = @PLANPRODUCT
		WHERE EVENTDATA = @WORKDATE+' 08:00:07' AND EVENTDATE1 = @EVENTDATE1;
	fetch  next  from  cur_data  into  @EVENTDATE1,@EVENTDATE30,@SEQ
	end
	close cur_data;
	deallocate cur_data;
	
COMMIT TRANSACTION
  END TRY
  BEGIN CATCH
    
    IF XACT_STATE() <> 0
    BEGIN
      ROLLBACK TRANSACTION
    END
    
    SET @ERROR_TAG = '1'
    SET @ERROR_MSG = ERROR_MESSAGE()
  END CATCH
END